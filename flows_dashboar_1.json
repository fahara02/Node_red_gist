[
    {
        "id": "f63587bd397db4fd",
        "type": "tab",
        "label": "MODBUS_SERVER",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "975f5a25aa9a015a",
        "type": "function",
        "z": "f63587bd397db4fd",
        "name": "parse_modbus_message",
        "func": "// Input data (replace with msg.payload or modify accordingly)\nconst inputArray = msg.payload; // Assume payload is the array you provided.\n\n// Initialize parsing index\nlet index = 0;\n\n// Helper function to convert two 16-bit registers into a float\nfunction parseFloat16(high, low) {\n    const intBits = (high << 16) | low;\n    return new Float32Array(new Uint32Array([intBits]).buffer)[0];\n}\n\n// Helper function to parse 64-bit integers from four 16-bit registers\nfunction parseInt64(highHigh, highLow, lowHigh, lowLow) {\n    const high = (highHigh << 16) | highLow;\n    const low = (lowHigh << 16) | lowLow;\n    return (BigInt(high) << 32n) | BigInt(low);  // Convert to BigInt to handle 64-bit values\n}\n\n// Parse NamePlate information\nconst parsedData = {};\n\nparsedData.id = inputArray[index++];\nparsedData.type = inputArray[index++];\n\n\n// Parse Voltage, Current, Power, Energy, Frequency, Power Factor, Alarm Status\nparsedData.voltage = parseFloat16(inputArray[index++], inputArray[index++]);\nparsedData.current = parseFloat16(inputArray[index++], inputArray[index++]);\nparsedData.power = parseFloat16(inputArray[index++], inputArray[index++]);\nparsedData.energy = parseFloat16(inputArray[index++], inputArray[index++]);\nparsedData.frequency = parseFloat16(inputArray[index++], inputArray[index++]);\nparsedData.powerFactor = parseFloat16(inputArray[index++], inputArray[index++]);\nparsedData.isValid=Boolean(inputArray[index++]);\nparsedData.voltage_cf=inputArray[index++];\nparsedData.current_cf=inputArray[index++];\nparsedData.power_cf=inputArray[index++];\nparsedData.energy_cf=inputArray[index++];\nparsedData.pf_cf=inputArray[index++];\nparsedData.frq_cf=inputArray[index++];\n\n\n\n// Output parsed data\nmsg.payload = parsedData;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 160,
        "wires": [
            [
                "8a9f7355422adb98"
            ]
        ]
    },
    {
        "id": "8fbbdefac7b9d763",
        "type": "function",
        "z": "f63587bd397db4fd",
        "name": "read power",
        "func": "var id =1;\nvar fc = 3;\nvar sa = 0;\nvar addresses = 21;\nvar slave_ip = msg.payload.slave_ip;\nmsg.slave_ip = \"192.168.0.172\";\nmsg.payload = { value: msg.payload, 'fc': fc, 'unitid': id, 'address': sa, 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 60,
        "wires": [
            [
                "b6583eb8e0b74433"
            ]
        ]
    },
    {
        "id": "44621baa3bd46baa",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "UPS_IN ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "9697e0a7d7f30a6b"
            ]
        ]
    },
    {
        "id": "6fea0bd3042e39f0",
        "type": "function",
        "z": "f63587bd397db4fd",
        "name": "convert_to_JSON",
        "func": "// Input: msg.payload should contain the parsed object from the previous step\n\n// Helper function to convert an object to JSON\nfunction convertToJson(parsedObject) {\n    try {\n        // Convert the object to a JSON string\n        return JSON.stringify(parsedObject, null, 2); // Pretty print with 2 spaces\n    } catch (error) {\n        // If there's an error, return an error object instead\n        return JSON.stringify({\n            error: \"Failed to convert object to JSON\",\n            details: error.message\n        });\n    }\n}\n\n// Assuming msg.payload contains the parsed object\nconst parsedObject = msg.payload;\n\n// Convert the parsed object to JSON\nmsg.payload = convertToJson(parsedObject);\n\n// Return the JSON string in msg.payload\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b6583eb8e0b74433",
        "type": "modbus-flex-getter",
        "z": "f63587bd397db4fd",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "1b9a4f1511420284",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "975f5a25aa9a015a"
            ],
            [
                "17ef72ab38e44a76"
            ]
        ]
    },
    {
        "id": "12ec7556a30ca129",
        "type": "function",
        "z": "f63587bd397db4fd",
        "name": "read power",
        "func": "var id =2;\nvar fc = 3;\nvar sa = 0;\nvar addresses = 21;\nvar slave_ip = msg.payload.slave_ip;\nmsg.slave_ip = \"192.168.0.172\";\nmsg.payload = { value: msg.payload, 'fc': fc, 'unitid': id, 'address': sa, 'quantity': addresses };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 120,
        "wires": [
            [
                "b6583eb8e0b74433"
            ]
        ]
    },
    {
        "id": "17ef72ab38e44a76",
        "type": "modbus-response",
        "z": "f63587bd397db4fd",
        "name": "",
        "registerShowMax": "38",
        "x": 830,
        "y": 120,
        "wires": []
    },
    {
        "id": "67996d9083641303",
        "type": "modbus-flex-write",
        "z": "f63587bd397db4fd",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "server": "1b9a4f1511420284",
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "1de6c45fd66d6aad"
            ],
            [
                "e931437db05081ee"
            ]
        ]
    },
    {
        "id": "e931437db05081ee",
        "type": "modbus-response",
        "z": "f63587bd397db4fd",
        "name": "",
        "registerShowMax": "1",
        "x": 810,
        "y": 380,
        "wires": []
    },
    {
        "id": "9697e0a7d7f30a6b",
        "type": "function",
        "z": "f63587bd397db4fd",
        "name": "LOAD0",
        "func": "var id =3;\nvar fc = 5;\nvar reg_addr = 0;\nvar qty = 1;\nmsg.slave_ip = \"192.168.0.172\";\nvar slave_ip = msg.payload.slave_ip;\n\n\nmsg.payload = { value: msg.payload, 'fc': fc, 'unitid': id, 'address': reg_addr, 'quantity': qty };\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            [
                "67996d9083641303"
            ]
        ]
    },
    {
        "id": "d2b331f4f521cadc",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "UPS_IN OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "9697e0a7d7f30a6b"
            ]
        ]
    },
    {
        "id": "d5674b2d086141b8",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "LOAD1 ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "0367c74c55a0563e"
            ]
        ]
    },
    {
        "id": "6aed9c0cbf99e126",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "LOAD1 OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "0367c74c55a0563e"
            ]
        ]
    },
    {
        "id": "0367c74c55a0563e",
        "type": "function",
        "z": "f63587bd397db4fd",
        "name": "LOAD 1",
        "func": "var id =3;\nvar fc = 5;\nvar reg_addr = 1;\nvar qty = 1;\nmsg.slave_ip = \"192.168.0.172\";\nvar slave_ip = msg.payload.slave_ip;\n\nmsg.payload = { value: msg.payload, 'fc': fc, 'unitid': id, 'address': reg_addr, 'quantity': qty };\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 440,
        "wires": [
            [
                "67996d9083641303"
            ]
        ]
    },
    {
        "id": "89867093759f1dd5",
        "type": "function",
        "z": "f63587bd397db4fd",
        "name": "LOAD2",
        "func": "var id =3;\nvar fc = 5;\nvar reg_addr = 2;\nvar qty = 1;\nmsg.slave_ip = \"192.168.0.172\";\nvar slave_ip = msg.payload.slave_ip;\n\nmsg.payload = { value: msg.payload, 'fc': fc, 'unitid': id, 'address': reg_addr, 'quantity': qty };\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 560,
        "wires": [
            [
                "67996d9083641303"
            ]
        ]
    },
    {
        "id": "0357eacafe5fbb58",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "LOAD2 ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "89867093759f1dd5"
            ]
        ]
    },
    {
        "id": "0a43ec2d7dfc3443",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "LOAD2 OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "89867093759f1dd5"
            ]
        ]
    },
    {
        "id": "b8767b3e7bf11fc3",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "LOAD3 ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "647cab74979f6ef4"
            ]
        ]
    },
    {
        "id": "698c6317c251cc1a",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "LOAD3 OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "647cab74979f6ef4"
            ]
        ]
    },
    {
        "id": "647cab74979f6ef4",
        "type": "function",
        "z": "f63587bd397db4fd",
        "name": "LOAD3 ",
        "func": "var id =3;\nvar fc = 5;\nvar reg_addr = 3;\nvar qty = 1;\nmsg.slave_ip = \"192.168.0.172\";\nvar slave_ip = msg.payload.slave_ip;\n\nmsg.payload = { value: msg.payload, 'fc': fc, 'unitid': id, 'address': reg_addr, 'quantity': qty };\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 720,
        "wires": [
            [
                "67996d9083641303"
            ]
        ]
    },
    {
        "id": "2823986f2377d87c",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "8fbbdefac7b9d763",
                "12ec7556a30ca129"
            ]
        ]
    },
    {
        "id": "d42c5b54d85385c5",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "LOAD4 ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "60923650e60280ae"
            ]
        ]
    },
    {
        "id": "93f0331eaf87eae4",
        "type": "inject",
        "z": "f63587bd397db4fd",
        "name": "LOAD4 OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "60923650e60280ae"
            ]
        ]
    },
    {
        "id": "60923650e60280ae",
        "type": "function",
        "z": "f63587bd397db4fd",
        "name": "LOAD4",
        "func": "var id =3;\nvar fc = 5;\nvar reg_addr = 4;\nvar qty = 1;\nmsg.slave_ip = \"192.168.0.172\";\nvar slave_ip = msg.payload.slave_ip;\n\nmsg.payload = { value: msg.payload, 'fc': fc, 'unitid': id, 'address': reg_addr, 'quantity': qty };\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 800,
        "wires": [
            [
                "67996d9083641303"
            ]
        ]
    },
    {
        "id": "1de6c45fd66d6aad",
        "type": "debug",
        "z": "f63587bd397db4fd",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 540,
        "wires": []
    },
    {
        "id": "8a9f7355422adb98",
        "type": "debug",
        "z": "f63587bd397db4fd",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "d40e471b585a6f0b",
        "type": "ui-button-group",
        "z": "f63587bd397db4fd",
        "name": "",
        "group": "25b4840ae2beec11",
        "order": 1,
        "width": 3,
        "height": 1,
        "label": "MAINS INPUT",
        "className": "",
        "rounded": true,
        "useThemeColors": true,
        "passthru": false,
        "options": [
            {
                "label": "OFF",
                "icon": "lightbulb-off",
                "value": "0",
                "valueType": "num",
                "color": "#009933"
            },
            {
                "label": "ON",
                "icon": "lightbulb-on",
                "value": "1",
                "valueType": "num",
                "color": "#999999"
            }
        ],
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 200,
        "wires": [
            [
                "9697e0a7d7f30a6b"
            ]
        ]
    },
    {
        "id": "3e33c2322f370e73",
        "type": "ui-button-group",
        "z": "f63587bd397db4fd",
        "name": "",
        "group": "25b4840ae2beec11",
        "order": 2,
        "width": 3,
        "height": 1,
        "label": "LOAD BANK1 ",
        "className": "",
        "rounded": true,
        "useThemeColors": true,
        "passthru": false,
        "options": [
            {
                "label": "OFF",
                "icon": "",
                "value": "option_0",
                "valueType": "str",
                "color": "#009933"
            },
            {
                "label": "ON",
                "icon": "",
                "value": "option_1",
                "valueType": "str",
                "color": "#999999"
            }
        ],
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 420,
        "wires": [
            [
                "0367c74c55a0563e"
            ]
        ]
    },
    {
        "id": "e78900a38f0465c4",
        "type": "ui-gauge",
        "z": "f63587bd397db4fd",
        "name": "",
        "group": "965c3c29c8a0702d",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "gauge",
        "units": "volt",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c"
            },
            {
                "from": "4",
                "color": "#ffc800"
            },
            {
                "from": "7",
                "color": "#ea5353"
            }
        ],
        "min": 0,
        "max": "300",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 790,
        "y": 300,
        "wires": []
    },
    {
        "id": "1b9a4f1511420284",
        "type": "modbus-client",
        "name": "PZEM_172",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.0.172",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "2000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "25b4840ae2beec11",
        "type": "ui-group",
        "name": "COMMANDS",
        "page": "8ac92c3234460b73",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "965c3c29c8a0702d",
        "type": "ui-group",
        "name": "INPUT_POWER",
        "page": "8ac92c3234460b73",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "8ac92c3234460b73",
        "type": "ui-page",
        "name": "LIVE VIEW",
        "ui": "6bb6879aa70631ea",
        "path": "/home",
        "icon": "home",
        "layout": "grid",
        "theme": "f51f9a07212ff54b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "6bb6879aa70631ea",
        "type": "ui-base",
        "name": "UPS Tester",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": "1",
        "showDisconnectNotification": true
    },
    {
        "id": "f51f9a07212ff54b",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#d1479f",
            "primary": "#0094ce",
            "bgPage": "#ededed",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    }
]